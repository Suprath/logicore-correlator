# FILE: docker-compose.yml
version: '3.8'

services:
  redis:
    image: redis:7-alpine
    container_name: logicore-redis
    networks:
      - logicore-net
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 2s
      retries: 5

  # NEW: PostgreSQL database for storing results
  postgres:
    image: postgres:15-alpine
    container_name: logicore-postgres
    platform: linux/arm64/v8
    environment:
      POSTGRES_DB: correlator_db
      POSTGRES_USER: correlator_user
      POSTGRES_PASSWORD: a_very_secure_password
    volumes:
      - postgres-data:/var/lib/postgresql/data
    networks:
      - logicore-net
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U correlator_user -d correlator_db"]
      interval: 5s
      timeout: 5s
      retries: 5

  api:
    build:
      context: ./api
    container_name: logicore-api-service
    depends_on:
      - redis
      - postgres # New dependency
    ports:
      - "8001:8001"
    networks:
      - logicore-net
    environment:
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
      # NEW: DB connection details for the API
      - DATABASE_URL=postgresql://correlator_user:a_very_secure_password@postgres:5432/correlator_db

  worker:
    build:
      context: ./worker
    container_name: logicore-worker-service
    volumes:
      - ./worker/rules.yaml:/app/rules.yaml:ro
      - ./artifacts:/data/artifacts:ro
      - git-cache-volume:/data/git_cache
    depends_on:
      - redis
      - postgres # New dependency
    networks:
      - logicore-net
    environment:
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
      # NEW: DB connection details for the worker
      - DATABASE_URL=postgresql://correlator_user:a_very_secure_password@postgres:5432/correlator_db
      - GITHUB_TOKEN=${GITHUB_TOKEN}
    mem_limit: 4g

  ngrok:
    image: ngrok/ngrok:latest
    container_name: logicore-ngrok-tunnel
    ports:
      - "4040:4040"
    environment:
      NGROK_AUTHTOKEN: ${NGROK_AUTHTOKEN}
    command: http api:8001
    networks:
      - logicore-net

networks:
  logicore-net:

volumes:
  postgres-data: # New named volume for Postgres
  git-cache-volume:
